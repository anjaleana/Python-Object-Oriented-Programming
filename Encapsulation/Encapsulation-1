# Implement a class called Laptop which is the init method that sets the value of price protected attribute that 
# store the price of laptop

# USing  get_price() read attribute and using set_price method to modify the attribute 

class Laptop:
    def __init__(self,price):
        self._price = price
    # read the Laptop price
    def get_price(self):
        return self._price
    # set the price
    def set_price(self,value):
        self._price = value
        
laptop = Laptop(3499)
print(laptop.get_price())
laptop.set_price(3999)
print(laptop.get_price())

Output:
3499
3499

## add validation of the price attribute 
# price attribute should be int or float and it should be greater than 0

class Laptop:
    def __init__(self,price):
        self._price = price
    def get_price(self):
        return self._price
    def set_price(self,value):
        if not isinstance(value,(int,float)):
            raise TypeError(
                'The price attribute must be an int or float type'
                            )
        if not value>0:
            raise TypeError('The price attribute be a positive int or float value')
            
        self._price = value
        
laptop = Laptop(34)
try:
    laptop.set_price(-3499)
except TypeError as error:
    print(error)

Output:
The price attribute be a positive int or float value

# Implement a class named Person that has two instance protected attribute named first_name and last_name respectively.
# Then implemented get_first_name() and get_last_name() which read protected attributes : first_name and last_name
# create an instance of the Person class and set the following attributes :
# first_name to the value 'John'
# last_name to the value 'Dow'

# print the value of first_name and last_name attribute of this instance to the consol

class Person:
    def __init__(self,first_name,last_name):
        self._first_name = first_name
        self._last_name = last_name
        
    def get_first_name(self):
        return self._first_name
    def get_last_name(self):
        return self._last_name
    
    first_name = property(fget = get_first_name)
    last_name = property(fget = get_last_name)
    
    
person = Person('John','Dow')
print(person.first_name)
print(person.last_name)

Output:
John
Dow

# Implement a class named Person that has one protected attribute first_name
# get_first_name : it is used to read the first name
# get_last_name : it is used to read the last name

# set_first_name : that allows to modify the value of firstname protected attribute

class Person:
    def __init__(self,first_name):
        self._first_name = first_name
    # read the first name
    def get_first_name(self):
        return self._first_name
    # set the first name
    def set_first_name(self,value):
        self._first_name = value
        
    first_name = property(fget=get_first_name,fset=set_first_name)
    
person = Person('John')
person.set_first_name('Mike')
print(person.first_name)

output:
Mike

